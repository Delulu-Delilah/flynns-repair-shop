name: Build and Release

on:
  push:
    tags:
      - 'v*'
  workflow_dispatch:
    inputs:
      version:
        description: 'Version to build (e.g., 1.0.4)'
        required: true
        default: '1.0.4'

env:
  NODE_VERSION: '18'
  ELECTRON_VERSION: '36.5.0'

jobs:
  build:
    name: Build for ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
        include:
          - os: ubuntu-latest
            artifact_name: linux
          - os: windows-latest
            artifact_name: windows
          - os: macos-latest
            artifact_name: macos

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'

      - name: Install dependencies
        run: |
          npm ci
          npm install -g @electron/rebuild

      - name: Create Convex API files
        run: |
          mkdir -p convex/_generated
          echo 'export const api = {} as any;' > convex/_generated/api.ts
          echo 'export const internal = {} as any;' > convex/_generated/api.ts
          echo 'export const server = {} as any;' > convex/_generated/server.ts
          echo 'export const dataModel = {} as any;' > convex/_generated/dataModel.ts

      - name: Build application
        run: npm run build

      - name: Build Electron app
        run: npm run electron:dist
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.artifact_name }}-build
          path: |
            dist-electron/
            !dist-electron/builder-debug.yml
            !dist-electron/builder-effective-config.yaml

  release:
    name: Create Release
    needs: build
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/')
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Download all artifacts
        uses: actions/download-artifact@v4
        with:
          path: artifacts

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}

      - name: Create Release
        uses: softprops/action-gh-release@v2
        with:
          files: |
            artifacts/*/dist-electron/*.exe
            artifacts/*/dist-electron/*.dmg
            artifacts/*/dist-electron/*.AppImage
            artifacts/*/dist-electron/*.deb
            artifacts/*/dist-electron/*.rpm
            artifacts/*/dist-electron/*.snap
            artifacts/*/dist-electron/*.zip
            artifacts/*/dist-electron/*.tar.gz
          generate_release_notes: true
          draft: false
          prerelease: false
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} 