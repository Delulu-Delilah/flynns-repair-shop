name: Security Scan

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:

jobs:
  security-scan:
    name: Security Scan
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Build application
        run: npm run build

      - name: Install Electronegativity
        run: npm install -g @doyensec/electronegativity

      - name: Run security scan
        run: |
          electronegativity -i ./dist-electron/win-unpacked -o security-report.csv
          echo "Security scan completed. Check artifacts for report."

      - name: Upload security report
        uses: actions/upload-artifact@v4
        with:
          name: security-report
          path: security-report.csv
          retention-days: 30

      - name: Comment PR with security findings
        if: github.event_name == 'pull_request'
        uses: actions/github-script@v7
        with:
          script: |
            const fs = require('fs');
            try {
              const report = fs.readFileSync('security-report.csv', 'utf8');
              const findings = report.split('\n').filter(line => line.includes('HIGH') || line.includes('MEDIUM'));
              
              if (findings.length > 0) {
                const comment = `## ðŸ”’ Security Scan Results\n\n**${findings.length} security findings detected:**\n\n\`\`\`\n${findings.join('\n')}\n\`\`\`\n\nPlease review and address these security issues before merging.`;
                github.rest.issues.createComment({
                  issue_number: context.issue.number,
                  owner: context.repo.owner,
                  repo: context.repo.repo,
                  body: comment
                });
              } else {
                const comment = `## ðŸ”’ Security Scan Results\n\nâœ… No high or medium priority security issues found.`;
                github.rest.issues.createComment({
                  issue_number: context.issue.number,
                  owner: context.repo.owner,
                  repo: context.repo.repo,
                  body: comment
                });
              }
            } catch (error) {
              console.log('No security report found or error reading report');
            } 